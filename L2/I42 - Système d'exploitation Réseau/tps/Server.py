#coding: utf-8

'''
AJAMI BOUSTAJI Sam

'''
# https://www.errorsolutions.tech/error/linux-error-111-connection-refused/ -> Solution pour une erreur que j'avais
import socket
import sys



HOST = '10.9.185.1'
PORT = 100022


year = datetime.date.today().year
mySocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try :
    mySocket.bind((HOST, PORT))
except socket.error :
    print("La liaison du socket à l'adresse choisie a échoué.")
    sys.exit()


while 1:

    print("serveur simple en attente...")
    mySocket.listen(5)
    connexion, adresse = mySocket.accept()
    print("Un client est connecté depuis l'adresse IP {} et le port {}".
    format(adresse[0], adresse[1]))
    connexion.send(("Vous êtes connecté au serveur " + HOST + ":" + str(PORT) + ";\n").encode('UTF-8'))

    while 1:
        msgClient = connexion.recv(1024)
        if msgClient == b'' : #Ici, j'ai fait ce if pour éviter un bug que j'avais, à chaque fois que j'éxécutais le programme, après le premier client, le programme se relançait une deuxième fois sans même avoir ré-éxécuté le programme Client.py
            break
        #print("test") -> test pour mieux comprendre le fonctionnement des fonctions
        #print(msgClient) -> test pour mieux comprendre le fonctionnement des fonctions
        msgClient = msgClient.decode("utf-8")
        #print("test") -> test pour mieux comprendre le fonctionnement des fonctions
        #print(msgClient) -> test pour mieux comprendre le fonctionnement des fonctions
        #print(type(msgClient)) -> test pour mieux comprendre le fonctionnement des fonctions
        #print(type(year)) -> test pour mieux comprendre le fonctionnement des fonctions


        #msgClient = int.from_bytes(msgClient, "little", signed = False) -> Un essai de solution pour faire le calcul de l'âge
        #connexion.send("test".encode('UTF-8')) -> Je vous promets M. Razik qu'AUCUN des connection.send ne marchait pas !!!
        msgClient = int(msgClient) # Transformation du msgClient de type (de str à int)
        #print(type(msgClient)) -> test pour mieux comprendre le fonctionnement des fonctions
        #print(msgClient) -> test pour mieux comprendre le fonctionnement des fonctions
        if msgClient > year : #Condition d'arrêt si l'année indiquée est supérieure à l'année actuelle
            #connexion.send("L'année est supérieure à l'année actuelle\n".encode('UTF-8')) -> encore une fois, ça ne marchait pas
            print("L'année est supérieure à l'année actuelle\n") #Du coup, j'ai changé tous les connexion.send par des print
            end = input("R(ecommencer)/T(erminer) ?")
            if end.upper() == 'T' : #Test pour savoir si le client veut réesayer
                break
        if msgClient == "" : #Si le client n'entre pas de date, le programme sort de la deuxième boucle
            break

        #print("reçu du client : ") -> test pour mieux comprendre le fonctionnement des fonctions
        #print(msgClient) -> test pour mieux comprendre le fonctionnement des fonctions
        age = year - msgClient #Variable age qui permet plus facilement de renvoyer au client
        age = str(age) #Transformation de la variable age (de int à str)
        #print("test") -> test pour mieux comprendre le fonctionnement des fonctions
        #print(age) -> test pour mieux comprendre le fonctionnement des fonctions
        #print(type(age)) -> test pour mieux comprendre le fonctionnement des fonctions
        #connexion.send(("Votre âge est de : " + age + " ans").encode('UTF-8')) -> ça ne marchait pas
        print(("Votre âge est de ") + age + " ans") #Print au lieu du connexion.send pour répondre sur le serveur
        break
    print("Connexion interrompue.")

    connexion.close()

    ch = input("Attendre un autre client ? R(ecommencer)/T(erminer) ?")
    if ch.upper() == 'T' :
        break
